---------------------------------------------------------------------------------------------

                            Introduction to Front-End Development

---------------------------------------------------------------------------------------------
***************************************************************************************

                                    Week 1

***************************************************************************************
---------------------------------------------------------------------------------------------

* HTML is used to structure the content that is being displayed in the webpages.
* CSS is used to control the colour and the style of the webpage.
* JavaScript is used to add interactivity to the webpage.

---------------------------------------------------------------------------------------------

HTML :- HyperText Markup Language
    * HTML is a markup language that is used to create the structure of a webpage.
    * HTML is not a programming language.

CSS :- Cascading Style Sheets
    * CSS is a style sheet language that is used to control the layout and appearance
        of a webpage.
    * CSS is not a programming language.
    * CSS is used to style the HTML elements.
    * CSS is used to control the colour, font, size, and layout of the HTML elements.

JavaScript :-
    * JavaScript is a programming language that is used to add interactivity to a webpage.
    * JavaScript is used to create dynamic content on a webpage.
    * JavaScript is used to manipulate the HTML and CSS of a webpage.
    * JavaScript is used to create animations and effects on a webpage.
    * JavaScript is used to create web applications.

------------------------------------------------------------------------------------------------
How does the Browser Work?
    * The browser is a software application that is used to access the internet.
    * The browser is used to display the HTML, CSS, and JavaScript code that is used to
        create a webpage.
    * The browser is used to interpret the HTML, CSS, and JavaScript code and display the
        webpage to the user.
    * The browser is used to send requests to the server and receive responses from
        the server.
    * The browser is used to cache the webpages that are visited by the user.

---------------------------------------------------------------------------------------------
Web Hosting:-
    * It is a service that allows hosting of websites on the internet.
    * Types of web hosting:
        1. Shared Hosting :-
            * It is a type of web hosting where multiple websites are hosted
                on a single server.
            * It is the most common and affordable type of web hosting.
            * It is suitable for small websites and blogs.
            * It is not suitable for large websites and applications.

        2. VPS (Virtual Private Service) Hosting:-
            * It is a type of web hosting where a single server is divided into
                multiple virtual servers.
            * Each virtual server has its own resources and can run its own
                operating system.
            * It is suitable for medium-sized websites and applications.

        3. Dedicated Hosting:-
            * It is a type of web hosting where a single server is dedicated to
                a single website.
            * It is suitable for large websites and applications that require
                high performance and security.
            * It is the most expensive type of web hosting.

        4. Cloud Hosting:-
            * It is a type of web hosting where multiple servers are used to
                host a website.
            * It is suitable for websites and applications that require high
                performance and scalability.
            * It is the most flexible type of web hosting.

---------------------------------------------------------------------------------------------
TCP:-
    * TCP (Transmission Control Protocol) is a protocol that is used to
        establish a connection between two devices on a network.
    * TCP is a reliable protocol that ensures that data is transmitted
        correctly and in the correct order.
    * TCP is used to transmit data over the internet.

---------------------------------------------------------------------------------------------
UDP:-
    * UDP (User Datagram Protocol) is a protocol that is used to transmit
        data over the internet.
    * UDP is an unreliable protocol that does not ensure that data is
        transmitted correctly or in the correct order.
    * UDP is used for real-time applications such as:-
        i. Video streaming
        ii. Audio streaming
        iii. Online gaming.

---------------------------------------------------------------------------------------------
HTTP:-
    * HTTP (Hypertext Transfer Protocol) is a protocol that is used to
        transmit data over the internet.
    * HTTP is a reliable protocol that ensures that data is transmitted
        correctly and in the correct order.
    * HTTP is used to transmit data over the internet.

    * There are 4 types of HTTP requests:
        i. GET :- Used to retrieve data from a server.
        ii. POST :- Used to send data to a server.
        iii. PUT :- Used to update data on a server.
        iv. DELETE :- Used to delete data from a server.
---------------------------------------------------------------------------------------------
HTTP Response:-
    * HTTP Response is a message sent by a server to a client in response to an HTTP request.
    * HTTP Response contains a status code, headers, a body and a status message.
    * HTTP Response status codes are used to indicate the status of the request.
    * HTTP Response status codes are divided into 5 categories:
        i. Informational responses (100-199)
        ii. Successful responses (200-299)
        iii. Redirection responses (300-399)
        iv. Client error responses (400-499)
        v. Server error responses (500-599)
        vi. Other responses (600-699)
        vii. Custom responses (700-1099)

---------------------------------------------------------------------------------------------
HTTPS:-
    * It is a secured protocol used to encrypt data between a client and a server.
    * HTTPS uses SSL/TLS to encrypt data.
    * HTTPS is more secure than HTTP.

---------------------------------------------------------------------------------------------
DNS:-
    * It is a protocol used to translate domain names into IP addresses.
    * DNS is used to resolve domain names into IP addresses.
    Ex:-
        i. www.google.com -> 172.217.168.142
                domain name:- www.google.com
                IP address:- 172.217.168.142

        ii. www.facebook.com -> 157.240.23.35
                domain name:- www.facebook.com
                IP address:- 157.240.23.35

---------------------------------------------------------------------------------------------
DHCP:-
    * It stands for Dynamic Host Configuration Protocol.
    * This works when a device connects to a network and needs an IP address.
    * It assigns IP addresses dynamically, reducing the need for manual configuration.

---------------------------------------------------------------------------------------------
IMAP:-
    * It stands for Internet Message Access Protocol.
    * This is used to access email messages from a server.
    * It allows users to retrieve email messages from a server.

---------------------------------------------------------------------------------------------
SMTP:-
    * It stands for Simple Mail Transfer Protocol.
    * This is used to send email messages from a server.
    * It allows users to send email messages from a server.

---------------------------------------------------------------------------------------------
POP3:-
    * It stands for Post Office Protocol version 3.
    * This is used to access email messages from a server.
    * It allows users to retrieve email messages from a server.

---------------------------------------------------------------------------------------------
FTP:-
    * It stands for File Transfer Protocol.
    * This is used to transfer files between a client and a server.
    * It allows users to upload and download files from a server.

---------------------------------------------------------------------------------------------
SSH:-
    * It stands for Secure Shell.
    * This is used to securely access a remote server.
    * It allows users to securely access a remote server.

---------------------------------------------------------------------------------------------
SFTP:-
    * It stands for Secure File Transfer Protocol.
    * This is used to securely transfer files between a client and a server.
    * It allows users to securely upload and download files from a server.

---------------------------------------------------------------------------------------------
Framework:-
    * Block of reusable code that provides a foundation for building web applications.
    * It provides a set of tools and libraries for building web applications.
    * It allows developers to build web applications faster and more efficiently.

---------------------------------------------------------------------------------------------
Library:-
    * Block of reusable code that provides a set of tools and libraries for building
        web applications.
    * It allows developers to build web applications faster and more efficiently.
    * It provides a set of tools and libraries for building web applications.

---------------------------------------------------------------------------------------------
API:-
    * API stands for Application Programming Interface.
    * It provides a set of tools and libraries for building web applications.
    * It allows developers to build web applications faster and more efficiently.
    * It provides a set of tools and libraries for building web applications.
    * Web APIs are a set of tools and libraries for building web applications.

---------------------------------------------------------------------------------------------
REST:-
    * REST stands for Representational State Transfer.
    * It is an architectural style for building web applications.
    * It is a set of tools and libraries for building web applications.
    * One of the main use of this API is to send and receive data from a
        centralized database

---------------------------------------------------------------------------------------------
Sensor-Based APIs
    * Sensor-Based APIs are a set of tools and libraries for building web applications.
    * It allows developers to build web applications faster and more efficiently.
    * It provides a set of tools and libraries for building web applications.
    * One of the main use of this API is to send and receive data from a centralized
        database

    Ex:- Philips Hue

---------------------------------------------------------------------------------------------
Endpoints
    * An endpoint is a URL that is used to access a web API.
    * It is a URL that is used to send and receive data from a web API.
    * It is a URL that is used to access a web API.

    Ex:- https://api.example.com/users
            https://api.example.com/products

---------------------------------------------------------------------------------------------
*********************************************************************************************


                                            Week 2


*********************************************************************************************
---------------------------------------------------------------------------------------------
HTML Tags:-

    i. Opening tag :- <tagname>
    ii. Closing tag :- </tagname>
    iii. Self-closing tag :- <tagname/>
        Ex:- line break tag <br/>
    iv. Empty tag :- <tagname></tagname>
    v. Block-level tag :- <tagname>
    vi. Inline tag :- <tagname></tagname>

---------------------------------------------------------------------------------------------
HTML codes start with:-
    <!DOCTYPE html>
    <html>
        <head>
            <title>Title of the document</title>
        </head>
        <body>
            <h1>Heading 1</h1>
            <p>Paragraph</p>
        </body>
    </html>

---------------------------------------------------------------------------------------------
Lists in html:-
    1. As bullet points
        <ul>
            <li>Item 1</li>
            <li>Item 2</li>
            <li>Item 3</li>
        </ul>

        <!-- This will create list of 3 items in the webpage -->

    2. As numbered list
        <ol>
            <li>Item 1</li>
            <li>Item 2</li>
            <li>Item 3</li>
        </ol>

        <!-- This will create list of 3 items in the webpage -->

---------------------------------------------------------------------------------------------
Div tags in html:-
    * <div> this tag is used to add content division in the HTML document.
    * It has no use unless styled with CSS.
    * It is used to group elements together for styling purposes.

    Ex:-
        <div>
            <h1>Heading 1</h1>
            <p>Paragraph</p>
        </div>

        <!-- This will create a division in the webpage with heading and paragraph -->
---------------------------------------------------------------------------------------------
Anchor tag:-
    * <a> this tag is used to create a hyperlink in the HTML document.
    * It is used to link to other webpages or resources.

    Ex:-
        <a href="https://www.google.com">Google</a>

        <!-- This will create a hyperlink to google.com -->

---------------------------------------------------------------------------------------------
Img tag:-
    * <img> this tag is used to add images in the HTML document.
    * It is used to display images on the webpage.

    Ex:-
        <img src="image.jpg" alt="Image">
        <!-- This will display an image on the webpage -->

To add height and width to the image:-
    * <img src="image.jpg" alt="Image" height="100" width="100">
        <!-- This will display an image on the webpage with height and width -->

---------------------------------------------------------------------------------------------
Alt tag:-
    * The alt tag is used to provide a text description of an image.
    * It is used to provide a text description of an image for accessibility & SEO purposes.

    Ex:-
        <img src="image.jpg" alt="Image">

        <!-- This will display an image on the webpage with alt tag -->

---------------------------------------------------------------------------------------------
HTML tables:-
    * It is used to display data in a tabular format.
    * <table> tag is used to create a table.
    * <tr> tag is used to create a table row.
    * <th> tag is used to create a table header.
    * <td> tag is used to create a table data cell.

    Ex:-
        <table>
            <tr>
                <th>Header 1</th>
                <th>Header 2</th>
            </tr>
            <tr>
                <td>Data 1</td> <!-- This is known as table data tag -->
                <td>Data 2</td>
            </tr>
        </table>

        <!-- This will create a table with 2 headers and 2 data rows -->

        ----------------------------------------------------------------

        It looks something like this:-
        +----------+----------+
        | Header 1 | Header 2 |
        +----------+----------+
        | Data 1   | Data 2   |
        +----------+----------+

---------------------------------------------------------------------------------------------
HTML Form:-
    * <form> this tag is used to create a form in the HTML document.
    * It is used to collect user input.

    Ex:-
        <form>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name">
            <input type="submit" value="Submit">
        </form>

        <!-- This will create a form with a text input and a submit button -->

---------------------------------------------------------------------------------------------
HTML form input types:-
    1. <input type="text" id="name" name="name"> - Text input
    2. <input type="password" id="password" name="password"> - Password input
    3. <input type="email" id="email" name="email"> - Email input
    4. <input type="number" id="number" name="number"> - Number input
    5. <input type="date" id="date" name="date"> - Date input
    6. <input type="file" id="file" name="file"> - File input
    7. <input type="checkbox" id="checkbox" name="checkbox"> - Checkbox input
    8. <input type="radio" id="radio" name="radio"> - Radio input
    9. <input type="submit" value="Submit"> - Submit button
    10. <input type="reset" value="Reset"> - Reset button
    11. <input type="button" value="Button"> - Button
    12. <input type="hidden" id="hidden" name="hidden"> - Hidden input
    13. <input type="search" id="search" name="search"> - Search input
    14. <input type="tel" id="tel" name="tel"> - Telephone input
    15. <input type="url" id="url" name="url"> - URL input
    16. <input type="color" id="color" name="color"> - Color input
    17. <input type="range" id="range" name="range"> - Range input
    18. <input type="datetime-local" id="datetime-local" name="datetime-local"> -
        Date and time input
    19. <input type="month" id="month" name="month"> - Month input
    20. <input type="week" id="week" name="week"> - Week input
    21. <input type="time" id="time" name="time"> - Time input
    22. <input type="image" id="image" name="image"> - Image input
    23. <input type="textarea" id="textarea" name="textarea"> - Text area input

---------------------------------------------------------------------------------------------
Form action:-
    * The action attribute is used to specify the URL where the form data will be sent.
    * It is used to specify the URL where the form data will be sent when the form is
        submitted.

    Ex:-
        <form action="https://www.example.com/form-submit" method="POST">
            <label for="name">Name:</label>
            <input type="text" id="name" name="name">
            <input type="submit" value="Submit">
        </form>

        <!-- This will create a form with a text input and a submit button that will
            send the data to example.com -->
---------------------------------------------------------------------------------------------
DOM (Document Object Model):-
    * The DOM is a programming interface for HTML and XML documents.
    * It represents the structure of a document as a tree of objects.
    * It allows developers to manipulate the structure, style, and content of a document.

    Ex:-
        var element = document.getElementById("element-id");
        element.innerHTML = "New content";

        <!-- This will change the content of the element with id "element-id" to
            "New content" -->

---------------------------------------------------------------------------------------------
World accessibility Intiative (WAI):-
    * It is an initiative that aims to make the web more accessible to people with
        disabilities.
    * It provides guidelines and resources for making web content more accessible.
    * It is a part of the World Wide Web Consortium (W3C).

---------------------------------------------------------------------------------------------


                                                CSS


---------------------------------------------------------------------------------------------
Link CSS to HTML:-
    * To link a CSS file to an HTML document,
        use the <link> tag in the <head> section of the HTML document.

    Ex:-
        There are two files `index.html` and `style.css`

        <!-- Linking CSS to HTML -->
        <html>
            <head>
                <link rel="stylesheet" type="text/css" href="style.css">
            </head>
            <body>
                <h1>Heading 1</h1>
                <p>Paragraph</p>
            </body>
        </html>

---------------------------------------------------------------------------------------------
Types of selector in CSS:-
    1. element selector:-
        Here the elements are selected based on their tag name.
        Ex:-
            h1 {
                color: red;
            }

            <!-- This will change the color of all h1 elements to red -->

    2. class selector:-
        Here the elements are selected based on their class name.
        Ex:-
            .class-name {
                color: red;
            }

            <!-- This will change the color of all elements with class "class-name"
                to red -->

    3. id selector:-
        Here the elements are selected based on their id name.
        Ex:-
            #id-name {
                color: red;
            }

            <!-- This will change the color of the element with id "id-name" to red -->

    4. attribute selector:-
        Here the elements are selected based on their attribute name.
        Ex:-
            [attribute-name] {
                color: red;
            }

            <!-- This will change the color of all elements with attribute
                "attribute-name" to red -->

    5. Descendant selector:-
        Here the elements are selected based on their parent element.
        Ex:-
            parent-element child-element {
                color: red;
            }

            <!-- This will change the color of all child elements of parent element
                to red -->

        `index.html` file,
        <html>
            <head>
                <link rel="stylesheet" type="text/css" href="style.css">
            </head>
            <body>
                <div class="parent">
                    <h1>Heading 1</h1>
                    <p>Paragraph</p>
                </div>
            </body>
        </html>
        ----------------------------------------------------

        `style.css` file,
        #parent h1 {
            color: red;
        }

    6. Child Selector:-
        Here the elements are selected based on their child element.
        Ex:-
            parent-element > child-element {
                color: red;
            }

            <!-- This will change the color of all child elements of parent element to
                red -->

        `index.html` file,
        <html>
            <head>
                <link rel="stylesheet" type="text/css" href="style.css">
            </head>
            <body>
                <div class="parent">
                    <h1>Heading 1</h1>
                    <p>Paragraph</p>
                </div>
            </body>
        </html>
        ----------------------------------------------------

        `style.css` file,
        #parent > h1 {
            color: red;
        }

    7. :hover Pseudo-class:-
        Here the elements are selected based on their hover state.
        Ex:-
            element:hover {
                color: red;
            }

            <!-- This will change the color of all elements to red when hovered over -->

        `index.html` file,
        <html>
            <head>
                <link rel="stylesheet" type="text/css" href="style.css">
            </head>
            <body>
                <h1>Heading 1</h1>
                <p>Paragraph</p>
            </body>
        </html>
        ----------------------------------------------------

        `style.css` file,
        h1:hover {
            color: red;
        }

---------------------------------------------------------------------------------------------
Ways to Color a text in CSS:-
    i. By using RGB value:-
        * Set the RBG value of the color in the CSS code.
        Ex:-
            h1 {
                color: rgb(255, 0, 0);
            }

            <!-- This will change the color of all h1 elements to red -->

    ii. By using RGBA value
        * Set the RGBA value of the color in the CSS code.
        * The last value is the opacity of the color.
        * The value can be between 0 and 1.
        * 0 is fully transparent and 1 is fully opaque.
        * The value can be in decimal or fraction.

        Ex:-
            h1 {
                color: rgba(255, 0, 0, 0.5);
            }

            rgba(119, 162, 54, 0.1)
            <!-- This will change the color of all h1 elements to red with 50% opacity -->

    iii. By using HSL value
        * Set the HSL value of the color in the CSS code.
        * The first value is the `hue`,
            the second value is the `saturation` and
                the third value is the `lightness`.
        * The hue value can be between 0 and 360.
            Ex:-
                0 is red, 120 is green and 240 is blue.
        * The saturation value can be between 0% and 100%.
        * The lightness value can be between 0% and 100%.
        * The value can be in decimal or fraction.

        Ex:-
            h1 {
                color: hsl(0, 100%, 50%);
            }

            <!-- This will change the color of all h1 elements to red -->

    iv. By using hex value
        * Set the hex value of the color in the CSS code.
        * The hex value is a 6 digit code that represents the color.
        * The first 2 digits represent the red value,
            the second 2 digits represent the green value and
                the last 2 digits represent the blue value.

        Ex:-
            h1 {
                color: #ff0000;
            }

            <!-- This will change the color of all h1 elements to red -->

    v. By using color name
        * Set the color name in the CSS code.
        * The color name can be any valid color name.
        * The color name can be in lowercase or uppercase.
        Ex:-
            h1 {
                color: red;
            }

            <!-- This will change the color of all h1 elements to red -->

---------------------------------------------------------------------------------------------
Text Font and Size:-
    * To set the font and size of the text in CSS,
        use the `font-family` and `font-size` properties.

    Ex:-
        h1 {
            font-family: Arial;
            font-weight: bold;
            font-size: 24px;
            text-tranform: uppercase;
        }

        <!-- This will set the followig:- -->
        <!-- Font family to Arial -->
        <!-- Font weight to bold -->
        <!-- Font size to 24px -->
        <!-- Text transform to uppercase -->
        <!-- This will change the font of all h1 elements to Arial with bold and
            24px size -->

---------------------------------------------------------------------------------------------
Box Model :-
    * The box model is a way to represent the structure of an HTML element.
    * It consists of the following parts:
        1. Content: The actual content of the element.
            * The size of this content are known as content width and content height.
        2. Padding: The space between the content and the border.
            * The size of this padding is known as padding width.
            * The padding can be of any color & size.
        3. Border: The border around the element.
            * The size of this border is known as border width.
            * The border can be solid, dashed, dotted, etc.
            * The border can be of any color & size.
        4. Margin: The space outside the border.
            * The size of this margin is known as margin width.
            * The margin can be of any color & size.

    Ex:-
        div {
            width: 200px;
            height: 100px;
            padding: 10px;
            border: 5px solid black;
            margin: 20px;
        }

        <!-- This will create a div with width of 200px, height of 100px, padding of
            10px, border of 5px and margin of 20px -->
        <!-- The total width of the div will be 200px + 10px + 5px + 20px = 235px -->
        <!-- The total height of the div will be 100px + 10px + 5px + 20px = 135px -->

---------------------------------------------------------------------------------------------
Types of elements:-
    1. Block-level elements:-
        * These elements take up the full width of their parent element.
        * They start on a new line and take up the full width of their parent element.
        * They can contain other block-level elements and inline elements.

        Ex:-
            <div>
                <h1>Heading 1</h1>
                <p>Paragraph</p>
            </div>

            <!-- This will create a div with heading and paragraph -->

    2. Inline elements:-
        * These elements do not take up the full width of their parent element.
        * They do not start on a new line and take up only the space they need.
        * They can only contain other inline elements.

        Ex:-
            <span>
                <a href="#">Link</a>
            </span>

            <!-- This will create a span with a link -->

---------------------------------------------------------------------------------------------
Display Block:-
    * The display block property is used to make an element a block-level element.
    * It is used to make an element take up the full width of its parent element.

    Ex:-
        div {
            display: block;
        }

        <!-- This will make the div a block-level element -->

---------------------------------------------------------------------------------------------
*********************************************************************************************


                                            Week 3


*********************************************************************************************
---------------------------------------------------------------------------------------------
Bootstrap:-
    * Bootstrap is a front-end framework for developing responsive and mobile-first
        websites.
    * It is a free and open-source front-end framework for developing responsive websites.
    * It is a CSS framework that provides a set of CSS classes and JavaScript
        components for building responsive websites.
    * It is a front-end framework that provides a set of tools and libraries for
        building responsive websites.
    Ex:-
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/
            4.5.2/css/bootstrap.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js">
            </script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/
            umd/popper.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/
            bootstrap.min.js"></script>

        <!-- This will link the bootstrap CSS and JS files to the HTML document -->

---------------------------------------------------------------------------------------------
Package Manager:-
    * A package manager is a tool that is used to manage the dependencies of a project.
    * It is used to install, update, and remove packages from a project.
    * It is used to manage the dependencies of a project.

    Ex:-
        npm install package-name
        yarn add package-name

        <!-- This will install the package in the project -->

    Ex:- Node, npm, yarn, etc.
        * Node is a JavaScript runtime that is used to run JavaScript code outside
            of the browser.
        * npm & yarn is a package manager for Node.js that is used to manage the
            dependencies of a project.

---------------------------------------------------------------------------------------------
Static conent vs Generative Content
    * Static content is content that does not change.
        Ex:-
            <h1>Heading 1</h1>
            <p>Paragraph</p>

            <!-- This is static content -->

    * Generative content is content that changes based on user input or other
        factors.
        Ex:-
            <h1 id="heading">Heading 1</h1>
            <p id="paragraph">Paragraph</p>

            <!-- This is generative content -->

        var heading = document.getElementById("heading");
        heading.innerHTML = "New Heading";

        <!-- This will change the heading to "New Heading" -->

---------------------------------------------------------------------------------------------
Caching:-
    * Caching is a technique used to store frequently accessed data in memory
        to improve performance.
    * It is used to store frequently accessed data in memory to improve
        performance.

    Ex:-
        i. Redis
        ii. Memcached

---------------------------------------------------------------------------------------------
Responsive Design;-
    * Responsive design is a design approach that aims to create websites that provide an optimal viewing experience across a wide range of devices.

    Ex:-
        @media (max-width: 600px) {
            body {
                background-color: lightblue;
            }
        }

        <!-- This will change the background color of the body to light blue when
            the screen width is less than 600px -->

---------------------------------------------------------------------------------------------
Types of grids:-
    1. Fixed grid:-
        * A fixed grid is a grid that has a fixed width and height.
        * It is used to create a fixed layout for a website.

    2. Fluid grid:-
        * A fluid grid is a grid that has a fluid width and height.
        * It is used to create a fluid layout for a website.

    3. Hybrid grid:-
        * A hybrid grid is a grid that has a fixed width and a fluid height.
        * It is used to create a hybrid layout for a website.

---------------------------------------------------------------------------------------------
Responsive Breakpoints, Class infixes and Dimensions:-
    * Responsive breakpoints are used to create responsive designs that adapt to
        different screen sizes.
    * Class infixes are used to create responsive designs that adapt to different
        screen sizes.
    * Dimensions are used to create responsive designs that adapt to different
        screen sizes.
    * The following are the responsive breakpoints, class infixes and dimensions
        used in Bootstrap:
        i. Extra Small breakpoints
            * Class infix: xs
            * Dimensions: < 576px

        ii. Small breakpoints
            * Class infix: sm
            * Dimensions: ≥ 576px

        iii. Medium breakpoints
            * Class infix: md
            * Dimensions: ≥ 768px

        iv. Large breakpoints
            * Class infix: lg
            * Dimensions: ≥ 992px

        v. Extra Large breakpoints
            * Class infix: xl
            * Dimensions: ≥ 1200px

        vi. Extra Extra Large breakpoints
            * Class infix: xxl
            * Dimensions: ≥ 1400px

---------------------------------------------------------------------------------------------
Modifiers in Bootstrap:-
    i. Primary:-
    ii. Secondary:-
    iii. Success:-
    iv. Danger:-
    v. Warning:-
    vi. Info:-

---------------------------------------------------------------------------------------------
Application Server:-
    * An application server is a server that provides a platform for running
        web applications.

    Ex:-
        i. Apache Tomcat
        ii. JBoss
        iii. GlassFish
        iv. WebLogic
        v. WebSphere

---------------------------------------------------------------------------------------------
Caching:-
    * Caching is a technique used to store frequently accessed data in memory
        to improve performance.
    * It is used to store frequently accessed data in memory to improve
        performance.

    Ex:-
        i. Redis
        ii. Memcached

---------------------------------------------------------------------------------------------
Single Page Application:-
    * A single page application (SPA) is a web application that loads a single
        HTML page and dynamically updates the content as the user interacts with
        the application.
    * It is a web application that loads a single HTML page and dynamically
        updates the content as the user interacts with the application.

    Ex:-
        i. React
        ii. Angular
        iii. Vue.js

---------------------------------------------------------------------------------------------


                                            React


---------------------------------------------------------------------------------------------
React:-
    * React is a JavaScript library for building user interfaces.
    * It is used to build single-page applications and mobile applications.
    * It is a declarative, efficient, and flexible JavaScript library for building
        user interfaces.
    * It allows developers to create reusable UI components.

---------------------------------------------------------------------------------------------
The virtual DOM:-
    * It is a lightweight representation of the actual DOM that is used to
        improve the performance of React applications.
    * It is used to improve the performance of React applications by reducing
        the number of updates to the actual DOM.

---------------------------------------------------------------------------------------------
How the virtual DOMs are updated in React?
    1. The virtual DOM is compared to the actual DOM to determine which parts of the
        actual DOM need to be updated.
    2. The changed elements are updated in the browser DOM.
    3. THe displayed webpages updates to match the browser DOM.
    4. The virtual DOM is updated to match the browser DOM.

---------------------------------------------------------------------------------------------
Component Hieracrcy in React:-
    * The component hierarchy in React is a tree-like structure that represents the
        relationship between components in a React application.
    * It is used to represent the relationship between components in a React
        application.

    Ex:-
        App
        ├── Header
        ├── Main
        │   ├── Sidebar
        │   └── Content
        └── Footer

---------------------------------------------------------------------------------------------